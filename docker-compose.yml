version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: passpal_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: passpal
      POSTGRES_USER: passpal_user
      POSTGRES_PASSWORD: passpal_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - passpal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U passpal_user -d passpal"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PassPal Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: passpal_api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://passpal_user:passpal_password@postgres:5432/passpal?schema=public
      # Firebase configuration - set these in .env file
      GOOGLE_APPLICATION_CREDENTIALS: /app/config/firebase-admin-sdk.json
    volumes:
      # Mount Firebase service account key file
      - ./config/firebase-admin-sdk.json:/app/config/firebase-admin-sdk.json:ro
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - passpal_network
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        npx prisma migrate deploy &&
        echo 'Database migration completed' &&
        node dist/main.js
      "

  # Redis (optional - for caching and sessions if needed in the future)
  redis:
    image: redis:7-alpine
    container_name: passpal_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - passpal_network
    command: redis-server --appendonly yes

  # Prisma Studio (optional - for database management UI)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile.prisma
    container_name: passpal_prisma_studio
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://passpal_user:passpal_password@postgres:5432/passpal?schema=public
    ports:
      - "5555:5555"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - passpal_network
    profiles:
      - dev # Only start with --profile dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  passpal_network:
    driver: bridge
