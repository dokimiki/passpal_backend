version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17.5-alpine
    container_name: passpal_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - passpal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PassPal Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: passpal_api
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${API_PORT}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    ports:
      - "${API_PORT}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - passpal_network
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        npx prisma migrate deploy &&
        echo 'Database migration completed' &&
        node dist/main.js
      "

networks:
  passpal_network:
    driver: bridge
